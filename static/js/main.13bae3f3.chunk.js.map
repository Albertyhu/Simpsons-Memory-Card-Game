{"version":3,"sources":["assets/bart.jpg","assets/burns.jpg","assets/grandpa.jpg","assets/homer.jpg","assets/krapappel.jpg","assets/krusty.jpg","assets/lisa.jpg","assets/maggie.jpg","assets/marge.jpg","assets/ned.jpg","assets/skinner.jpg","assets/moe.jpg","components/contextItem.js","components/orderImages.js","components/randGen.js","components/imageObject.js","components/cellNumbers.js","renderingFunctions/setImage.js","renderingFunctions/createGrid.js","renderingFunctions/assignImages.js","App.js","components/createImageArray.js","index.js"],"names":["module","exports","__webpack_require__","p","MyContext","React","createContext","OrderImages","imageNumber","num","arr","i","redo","number","Math","floor","random","includes","push","Collection","bart","burns","grandpa","homer","krapappel","krusty","lisa","maggie","marge","moe","ned","skinner","CellNumbers","SetImage","cellLocation","image","ID","handle","cell","document","getElementById","src","onclick","RenderGrid","props","_useContext","useContext","clickImage","checkClicked","clickWrongImg","randomizePos","reset","getImageArray","getImageOrder","imgOrder","handleClick","useEffect","imageArray","length","AssignImages","react_default","a","createElement","id","className","alt","App","count","forEach","item","clicked","Characters","imgOdr","_useState","useState","_useState2","Object","slicedToArray","score","setScore","_useState3","_useState4","bestScore","setBestScore","_useState5","_useState6","imageOrder","setImageOrder","_useState7","_useState8","setImageArray","context","isDuplicate","tempArr","toConsumableArray","imageID","alert","filter","val","getScore","Provider","value","createGrid","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.13bae3f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bart.7babdaaf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/burns.038a5970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grandpa.45808994.jpg\";","module.exports = __webpack_public_path__ + \"static/media/homer.e600f35c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/krapappel.9b93ab7b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/krusty.c40a1b55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lisa.361901ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/maggie.a7aaa96b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marge.169a373d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ned.ea4dd20c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skinner.6913a606.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moe.39b8866f.jpg\";","import React from 'react';\r\n\r\nexport const MyContext = React.createContext(); ","\r\nimport { randNumber } from './randGen.js'; \r\n\r\nexport const OrderImages = imageNumber => {\r\n \r\n    var arr = []; \r\n    for (var i = 0; i < imageNumber; i++) {\r\n        var redo = true; \r\n        while (redo) {\r\n            var number = randNumber(imageNumber)\r\n            if (!arr.includes(number)) {\r\n                arr.push(number);\r\n                redo = false; \r\n            }    \r\n        }\r\n    }\r\n    return arr; \r\n}\r\n","const alpha = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r\n\r\nexport const genKey = (size) => {\r\n    var key = \"\"; \r\n    for (var i = 0; i < size; i++) {\r\n        key += alpha[Math.floor(Math.random() * alpha.length) - 1]; \r\n    }\r\n    return key; \r\n}\r\n\r\nexport const randNumber = num => {\r\n    return Math.floor(Math.random() * num)\r\n}","\r\nimport bart from '../assets/bart.jpg';\r\nimport burns from '../assets/burns.jpg';\r\nimport grandpa from '../assets/grandpa.jpg';\r\nimport homer from '../assets/homer.jpg';\r\nimport krapappel from '../assets/krapappel.jpg';\r\nimport krusty from '../assets/krusty.jpg';\r\nimport lisa from '../assets/lisa.jpg';\r\nimport maggie from '../assets/maggie.jpg';\r\nimport marge from '../assets/marge.jpg';\r\nimport ned from '../assets/ned.jpg';\r\nimport skinner from '../assets/skinner.jpg';\r\nimport moe from '../assets/moe.jpg'; \r\n\r\nexport const Collection = [\r\n    bart,\r\n    burns,\r\n    grandpa, \r\n    homer,\r\n    krapappel,\r\n    krusty,\r\n    lisa,\r\n    maggie,\r\n    marge, \r\n    moe,\r\n    ned, \r\n    skinner\r\n]","export const CellNumbers = [\"A1\", \"A2\", \"A3\", \"A4\", \"B1\", \"B2\", \"B3\", \"B4\", \"C1\", \"C2\", \"C3\", \"C4\"]; ","\r\nexport const SetImage = (cellLocation, image, ID, handle) => {\r\n   \r\n    const cell = document.getElementById(cellLocation); \r\n\r\n    const executeFunction = () => {\r\n        handle(ID); \r\n    }\r\n\r\n    cell.src = image; \r\n    cell.onclick = executeFunction; \r\n}\r\n","import React, {  useContext, useEffect } from 'react'; \r\nimport { MyContext } from '../components/contextItem.js'; \r\n\r\nimport { AssignImages } from './assignImages.js'; \r\n\r\nconst RenderGrid = props => {\r\n    const { clickImage, checkClicked, clickWrongImg, randomizePos, reset, getImageArray, getImageOrder} = useContext(MyContext); \r\n\r\n    var arr = getImageArray(); \r\n    var imgOrder = getImageOrder(); \r\n\r\n    const handleClick = (ID) => {\r\n        if (checkClicked(ID)) {\r\n            clickWrongImg();\r\n            reset();\r\n        }\r\n        else {\r\n            clickImage(ID);\r\n        }\r\n        randomizePos();\r\n    }\r\n\r\n    useEffect(() => {\r\n        AssignImages(arr, imgOrder, handleClick);\r\n    }, [getImageOrder()])\r\n\r\n    return (\r\n\r\n        <div id = \"grid\">\r\n            <div className = \"row\" id = \"row1\">\r\n                <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"A1\"  /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"A2\" /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"A3\" /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"A4\" /> </div>\r\n            </div>\r\n            <div className=\"row\" id=\"row2\">\r\n                <div id=\"A1\" className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"B1\" /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"B2\" /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"B3\" /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"B4\" /> </div>\r\n            </div>\r\n            <div className=\"row\" id=\"row3\">\r\n                <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"C1\" /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"C2\" /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"C3\" /> </div> <div className=\"cell\"><img alt = \"character\"  className=\"image\" id=\"C4\" /> </div>\r\n            </div>\r\n        </div> \r\n        )\r\n}\r\n\r\nexport default RenderGrid; ","\r\nimport { CellNumbers } from '../components/cellNumbers.js'; \r\nimport { SetImage } from './setImage.js';\r\n\r\nexport const AssignImages = (imageArray, imgOrder, handle) => {\r\n    for (var i = 0; i < CellNumbers.length; i++) {\r\n        SetImage(CellNumbers[i], imageArray[imgOrder[i]].image, imageArray[imgOrder[i]].ID, handle)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'; \r\n\r\nimport { MyContext } from './components/contextItem.js';\r\nimport { OrderImages } from './components/orderImages.js'; \r\n\r\nimport { Characters } from './components/createImageArray.js'; \r\nimport RenderGrid from './renderingFunctions/createGrid.js';\r\n\r\nconst App = () => {\r\n    var arr = Characters(); \r\n    var imgOdr = OrderImages(12); \r\n    const [score, setScore] = useState(0);\r\n    const [bestScore, setBestScore] = useState(0); \r\n    const [imageOrder, setImageOrder] = useState(imgOdr); \r\n    const [imageArray, setImageArray] = useState(arr); \r\n\r\n    const context = {\r\n        getImageOrder: () => {\r\n            return imageOrder; \r\n        },\r\n        //randomizes the positions of the images \r\n        randomizePos: () => {\r\n            var tempArr = []; \r\n            var isDuplicate;\r\n            do {\r\n                isDuplicate = true; \r\n                tempArr = OrderImages(12);\r\n                for (var i = 0; i < tempArr.length; i++) {\r\n                    if (tempArr[i] !== imageOrder[i]) {\r\n                        isDuplicate = false;\r\n                    }\r\n                }\r\n            } while (isDuplicate); \r\n\r\n            setImageOrder(tempArr)\r\n        },\r\n        getImageArray: () => {\r\n            return imageArray; \r\n        },\r\n        reset: () => {\r\n            var tempArr = [...imageArray];\r\n            tempArr.forEach(item => {\r\n                item.clicked = false; \r\n            })\r\n            setImageArray([...tempArr]); \r\n        },\r\n        clickImage: (imageID) => {\r\n            var tempArr = [...imageArray]; \r\n            tempArr.forEach(item => {\r\n                if (item.ID === imageID) {\r\n                    item.clicked = true; \r\n                }\r\n            })\r\n            setImageArray([...tempArr]);\r\n            setScore(score + 1); \r\n\r\n        },\r\n        clickWrongImg: () => {\r\n            setScore(0);\r\n            alert(\"You've clicked on that image already. Try again and git gud.\")\r\n        }, \r\n        checkClicked: (imageID) => {\r\n            var targetObject = imageArray.filter(val => val.ID === imageID)\r\n            return targetObject[0].clicked; \r\n        },\r\n        getScore: () => { return score },\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (score > bestScore) {\r\n            setBestScore(score);\r\n\r\n        }\r\n        if (score >= 12) {\r\n            alert(\"Great job! You got all 12. Let's see if you can continue your streak.\")\r\n            context.reset(); \r\n        }\r\n    }, [score])\r\n\r\n    return (\r\n        <MyContext.Provider value={context}>\r\n            <div className=\"App\">\r\n\r\n                <div id=\"titleContainer\">\r\n                    <div id = \"mainTitle\">The Simpsons Memory Card Game</div>\r\n                </div>\r\n                <div id = \"instructionContainer\"><p id = \"instruction\">The object of this game is to click on each card once to score one point and to try get the highest score. If you click on a card more than once, you lose the game and the score resets to zero.</p></div>\r\n                <div id=\"scoreContainer\">\r\n                    <div id=\"score\">Score: {score}</div>\r\n                    <div id=\"bestScore\">Best: {bestScore} </div>\r\n                </div>\r\n                <div id=\"gridContainer\" >\r\n                    <RenderGrid />\r\n                </div>\r\n            </div>\r\n        </MyContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport { Collection } from './imageObject.js';\r\n\r\n\r\n//This function is responsible for storing the images, their ID and their click information in state array\r\nexport const Characters = () => {\r\n    var arr = []; \r\n    var count = 0; \r\n    Collection.forEach(item => {\r\n        arr.push({\r\n            image: item,\r\n            ID: count, \r\n            clicked: false, \r\n        })\r\n        count++; \r\n    })\r\n\r\n    return arr; \r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './style/myStyle.css';\r\n\r\n\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n"],"sourceRoot":""}